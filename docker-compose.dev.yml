version: "3.9"

networks:
  internal-net:
    driver: bridge
  public-net:
    driver: bridge

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: sanctum_backend
    ports:
      - "7002:7001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - redis
      - rabbitmq
    networks:
      - internal-net
      - public-net

  worker-export-data:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: sanctum_worker_export_data
    volumes:
      - ./backend:/usr/src/app
      - ./backend/node_modules:/usr/src/app/node_modules
    working_dir: /usr/src/app
    command: >
      sh -c "nodemon --watch src --ext ts,js,json --exec 'npx ts-node src/workers/export-data/index.ts'"
    environment:
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - redis
      - rabbitmq
    networks:
      - internal-net

  worker-send-email:
    build:
      context: ./workers
      dockerfile: Dockerfile.dev
    container_name: sanctum_worker_send_email
    volumes:
      - ./workers:/app
      - /app/node_modules
    environment:
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - backend
    networks:
      - internal-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: sanctum_frontend
    ports:
      - "8084:8080"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - public-net

  redis:
    image: redis:6
    container_name: sanctum_redis
    restart: unless-stopped
    networks:
      - internal-net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: sanctum_rabbitmq
    ports:
      - "15674:15672"
    restart: unless-stopped
    networks:
      - internal-net
